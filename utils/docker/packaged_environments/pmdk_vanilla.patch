diff --git a/src/benchmarks/Makefile b/src/benchmarks/Makefile
index 78b08d3ff..a10027a76 100644
--- a/src/benchmarks/Makefile
+++ b/src/benchmarks/Makefile
@@ -147,7 +147,7 @@ LIBMAP=$(LIBMAP_DIR)/libmap.a
 OBJS += pmemobj.o
 
 ifeq ($(DEBUG),)
-CXXFLAGS += -O1
+CXXFLAGS += -O3
 LIBS_PATH=../nondebug
 else
 CXXFLAGS += -ggdb
@@ -166,9 +166,18 @@ CXXFLAGS += $(EXTRA_CXXFLAGS)
 
 objdir=.
 
+# https://llvm.org/docs/GoldPlugin.html#quickstart-for-using-lto-with-autotooled-projects
+CC:=$(shell which clang)
+CXX:=$(shell which clang++)
+NM:=$(shell which llvm-nm)
+OPT_LEVEL:=-O3
+FORTIFY:=-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0
+LDFLAGS += -fuse-ld=gold
+
 #if SPP_OFF is set, enable PMDK's original functions
 ifeq ($(SPP_OFF),1) #----------------------------------
 CXXFLAGS += -DSPP_OFF
+CXXFLAGS += $(OPT_LEVEL) $(FORTIFY)
 else #----------------------------------
 SPPROOT:= $(TOP)/..
 LLVMROOT:=$(SPPROOT)/llvm-project
@@ -194,7 +203,7 @@ WRAP_LIST:=-Wl,-wrap,free -Wl,-wrap,strcpy -Wl,-wrap,strcmp \
            -Wl,-wrap,pmem_memset_persist -Wl,-wrap,pmemobj_memcpy \
            -Wl,-wrap,pmemobj_memcpy_persist -Wl,-wrap,pmemobj_memmove \
            -Wl,-wrap,pmemobj_memset -Wl,-wrap,pmemobj_memset_persist
-OPT_LEVEL:=-O1
+OPT_LEVEL:=-O3
 FORTIFY:=-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0
 
 # CXXFLAGS += -flto -fno-builtin $(OPT_LEVEL) $(FORTIFY)
@@ -224,7 +233,7 @@ ifeq ($(SPP_OFF),1) #----------------------------------
 	$(create-deps)
 
 $(BENCHMARK): $(TMP_HEADERS) $(OBJS) $(LIBMAP)
-	$(CXX) -o $@ $(LDFLAGS) $(OBJS) $(LIBMAP) $(LIBS)
+	$(CXX) $(OPT_LEVEL) $(FORTIFY) -o $@ $(LDFLAGS) $(OBJS) $(LIBMAP) $(LIBS)
 else #----------------------------------
 
 pmembench.o: pmembench.cpp Makefile
diff --git a/src/examples/Makefile.inc b/src/examples/Makefile.inc
index 8d6738290..e9a949c55 100644
--- a/src/examples/Makefile.inc
+++ b/src/examples/Makefile.inc
@@ -26,12 +26,23 @@ endif
 INCS = -I$(INCDIR) -I. -I$(TOP_SRC)/examples $(OS_INCS)
 LIBS += $(OS_LIBS) $(LIBUUID)
 
-OPT_LEVEL:=-O1
+
+# https://llvm.org/docs/GoldPlugin.html#quickstart-for-using-lto-with-autotooled-projects
+CC:=$(shell which clang)
+CXX:=$(shell which clang++)
+AR:=$(shell which llvm-ar)
+NM:=$(shell which llvm-nm)
+#LD:=$(shell which ld.gold)
+
+OPT_LEVEL:=-O2
+FORTIFY:=-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0
+LDFLAGS += -fuse-ld=gold
 
 #if SPP_OFF is set, enable PMDK's original functions
 ifeq ($(SPP_OFF),1) #----------------------------------
 CFLAGS += -DSPP_OFF
 CXXFLAGS += -DSPP_OFF
+CFLAGS += $(OPT_LEVEL) $(FORTIFY)
 else #----------------------------------
 SPPROOT:= $(TOP)/..
 LLVMROOT:=$(SPPROOT)/llvm-project
@@ -51,16 +62,8 @@ WRAP_LIST:=-Wl,-wrap,free -Wl,-wrap,strcpy -Wl,-wrap,strcmp \
            -Wl,-wrap,memchr -Wl,-wrap,strchr -Wl,-wrap,strncat \
            -Wl,-wrap,strtol -Wl,-wrap,strlen -Wl,-wrap,strchrnul \
            -Wl,-wrap,strcat -Wl,-wrap,snprintf \
-           -Wl,-wrap,memcpy -Wl,-wrap,memset -Wl,-wrap,memmove \
-           -Wl,-wrap,pmem_memmove_persist -Wl,-wrap,pmem_memcpy_persist \
-           -Wl,-wrap,pmem_memmove_nodrain -Wl,-wrap,pmem_memcpy_nodrain \
-           -Wl,-wrap,pmem_memmove -Wl,-wrap,pmem_memcpy \
-           -Wl,-wrap,pmem_memset_nodrain -Wl,-wrap,pmem_memset \
-           -Wl,-wrap,pmem_memset_persist -Wl,-wrap,pmemobj_memcpy \
-           -Wl,-wrap,pmemobj_memcpy_persist -Wl,-wrap,pmemobj_memmove \
-           -Wl,-wrap,pmemobj_memset -Wl,-wrap,pmemobj_memset_persist
+           -Wl,-wrap,memcpy -Wl,-wrap,memset -Wl,-wrap,memmove
 FORTIFY:=-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0
-LDFLAGS += -lpmem
 
 CFLAGS += -flto $(OPT_LEVEL) $(FORTIFY)
 CFLAGS += -Xclang -load -Xclang $(LLVMROOT)/build/lib/LLVMSPP.so
@@ -104,9 +107,8 @@ all-dirs clean-dirs clobber-dirs cstyle-dirs format-dirs sparse-dirs: $(DIRS)
 all-progs: $(PROGS)
 
 ifeq ($(SPP_OFF),1) #----------------------------------
-all-libraries: $(DYNAMIC_LIBRARIES) $(STATIC_LIBRARIES)
-$(foreach l, $(LIBRARIES), $(eval lib$(l).so: lib$(l).o))
-$(foreach l, $(LIBRARIES), $(eval $(l): lib$(l).so lib$(l).a))
+all-libraries: $(STATIC_LIBRARIES)
+$(foreach l, $(LIBRARIES), $(eval $(l): lib$(l).a))
 else #----------------------------------
 all-libraries: $(STATIC_LIBRARIES)
 $(foreach l, $(LIBRARIES), $(eval $(l): lib$(l).a))
@@ -158,19 +160,28 @@ ifeq ($(SPP_OFF),1) #----------------------------------
 
 %.o: %.c $(MAKEFILE_DEPS)
 	$(call check-cstyle, $<)
-	$(CC) -c $(OPT_LEVEL) -o $@ $(CFLAGS) $(INCS) $<
+	$(CC) -c -o $@ $(CFLAGS) $(INCS) $<
 
 lib%.o:
-	$(LD) $(OPT_LEVEL) -o $@ -r $^
+	cp $^ $@
 
-$(STATIC_LIBRARIES):
-	$(AR) rv $@ $<
+libmap%.o:
+	$(AR) rcv $@ $^
 
-$(DYNAMIC_LIBRARIES):
-	$(LINKER) $(OPT_LEVEL) -shared -o $@ $(LDFLAGS) -Wl,-shared,-soname=$@ $(LIBS) $<
+libmap.o:
+	$(AR) rcv $@ $^
+
+$(STATIC_LIBRARIES): $(eval SHELL:=/bin/bash)
+	@if [[ $@ == "libmap"*".a" ]]; then \
+		echo "cp $^ $@"; \
+		cp $^ $@; \
+	else \
+		echo "$(AR) rcv $@ $<"; \
+		$(AR) rcv $@ $<; \
+	fi
 
 $(PROGS): | $(TMP_HEADERS)
-	LD_LIBRARY_PATH=$(LIBFABRIC_LD_LIBRARY_PATHS):$(LIBNDCTL_LD_LIBRARY_PATHS):$(LD_LIBRARY_PATH) $(LINKER) $(OPT_LEVEL) -o $@ $^ $(LDFLAGS) $(LIBS)
+	LD_LIBRARY_PATH=$(LIBFABRIC_LD_LIBRARY_PATHS):$(LIBNDCTL_LD_LIBRARY_PATHS):$(LD_LIBRARY_PATH) $(LINKER) $(CFLAGS) $(BUILD_EXEC_FLAGS) -o $@ $^ $(LDFLAGS) $(LIBS)
 
 else #----------------------------------
 
diff --git a/src/examples/libpmemobj/map/Makefile b/src/examples/libpmemobj/map/Makefile
index 3dd3a589d..0f6a7a87d 100644
--- a/src/examples/libpmemobj/map/Makefile
+++ b/src/examples/libpmemobj/map/Makefile
@@ -38,53 +38,53 @@ data_store: data_store.o libmap.a
 kv_server: kv_server.o libmap.a
 
 #if SPP_OFF is set, enable PMDK's original functions
-ifeq ($(SPP_OFF),1) #----------------------------------
+# ifeq ($(SPP_OFF),1) #----------------------------------
 
-libmap_ctree.o: map_ctree.o map.o ../tree_map/libctree_map.a
-libmap_btree.o: map_btree.o map.o ../tree_map/libbtree_map.a
-libmap_rtree.o: map_rtree.o map.o ../tree_map/librtree_map.a
-libmap_rbtree.o: map_rbtree.o map.o ../tree_map/librbtree_map.a
-libmap_hashmap_atomic.o: map_hashmap_atomic.o map.o ../hashmap/libhashmap_atomic.a
-libmap_hashmap_tx.o: map_hashmap_tx.o map.o ../hashmap/libhashmap_tx.a
-libmap_hashmap_rp.o: map_hashmap_rp.o map.o ../hashmap/libhashmap_rp.a
-libmap_skiplist.o: map_skiplist.o map.o ../list_map/libskiplist_map.a
+# libmap_ctree.o: map_ctree.o map.o ../tree_map/libctree_map.a
+# libmap_btree.o: map_btree.o map.o ../tree_map/libbtree_map.a
+# libmap_rtree.o: map_rtree.o map.o ../tree_map/librtree_map.a
+# libmap_rbtree.o: map_rbtree.o map.o ../tree_map/librbtree_map.a
+# libmap_hashmap_atomic.o: map_hashmap_atomic.o map.o ../hashmap/libhashmap_atomic.a
+# libmap_hashmap_tx.o: map_hashmap_tx.o map.o ../hashmap/libhashmap_tx.a
+# libmap_hashmap_rp.o: map_hashmap_rp.o map.o ../hashmap/libhashmap_rp.a
+# libmap_skiplist.o: map_skiplist.o map.o ../list_map/libskiplist_map.a
 
-libmap.o: map.o map_ctree.o map_btree.o map_rtree.o map_rbtree.o map_skiplist.o\
-	map_hashmap_atomic.o map_hashmap_tx.o map_hashmap_rp.o\
-	../tree_map/libctree_map.a\
-	../tree_map/libbtree_map.a\
-	../tree_map/librtree_map.a\
-	../tree_map/librbtree_map.a\
-	../list_map/libskiplist_map.a\
-	../hashmap/libhashmap_atomic.a\
-	../hashmap/libhashmap_tx.a\
-	../hashmap/libhashmap_rp.a
-
-../tree_map/libctree_map.a:
-	$(MAKE) -C ../tree_map ctree_map
+# libmap.o: map.o map_ctree.o map_btree.o map_rtree.o map_rbtree.o map_skiplist.o\
+# 	map_hashmap_atomic.o map_hashmap_tx.o map_hashmap_rp.o\
+# 	../tree_map/libctree_map.a\
+# 	../tree_map/libbtree_map.a\
+# 	../tree_map/librtree_map.a\
+# 	../tree_map/librbtree_map.a\
+# 	../list_map/libskiplist_map.a\
+# 	../hashmap/libhashmap_atomic.a\
+# 	../hashmap/libhashmap_tx.a\
+# 	../hashmap/libhashmap_rp.a
 
-../tree_map/libbtree_map.a:
-	$(MAKE) -C ../tree_map btree_map
+# ../tree_map/libctree_map.a:
+# 	$(MAKE) -C ../tree_map ctree_map
 
-../tree_map/librtree_map.a:
-	$(MAKE) -C ../tree_map rtree_map
+# ../tree_map/libbtree_map.a:
+# 	$(MAKE) -C ../tree_map btree_map
 
-../tree_map/librbtree_map.a:
-	$(MAKE) -C ../tree_map rbtree_map
+# ../tree_map/librtree_map.a:
+# 	$(MAKE) -C ../tree_map rtree_map
 
-../list_map/libskiplist_map.a:
-	$(MAKE) -C ../list_map skiplist_map
+# ../tree_map/librbtree_map.a:
+# 	$(MAKE) -C ../tree_map rbtree_map
 
-../hashmap/libhashmap_atomic.a:
-	$(MAKE) -C ../hashmap hashmap_atomic
+# ../list_map/libskiplist_map.a:
+# 	$(MAKE) -C ../list_map skiplist_map
 
-../hashmap/libhashmap_tx.a:
-	$(MAKE) -C ../hashmap hashmap_tx
+# ../hashmap/libhashmap_atomic.a:
+# 	$(MAKE) -C ../hashmap hashmap_atomic
 
-../hashmap/libhashmap_rp.a:
-	$(MAKE) -C ../hashmap hashmap_rp
+# ../hashmap/libhashmap_tx.a:
+# 	$(MAKE) -C ../hashmap hashmap_tx
+
+# ../hashmap/libhashmap_rp.a:
+# 	$(MAKE) -C ../hashmap hashmap_rp
 
-else #----------------------------------
+# else #----------------------------------
 
 libmap_ctree.o: map_ctree.o map.o ../tree_map/libctree_map.o
 libmap_btree.o: map_btree.o map.o ../tree_map/libbtree_map.o
@@ -130,4 +130,4 @@ libmap.o: map.o map_ctree.o map_btree.o map_rtree.o map_rbtree.o map_skiplist.o\
 ../hashmap/libhashmap_rp.o:
 	$(MAKE) -C ../hashmap hashmap_rp
 
-endif
\ No newline at end of file
+# endif
\ No newline at end of file
